// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/xescugc/rebost/storing (interfaces: Service)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	io "io"
	reflect "reflect"
)

// Storing is a mock of Service interface
type Storing struct {
	ctrl     *gomock.Controller
	recorder *StoringMockRecorder
}

// StoringMockRecorder is the mock recorder for Storing
type StoringMockRecorder struct {
	mock *Storing
}

// NewStoring creates a new mock instance
func NewStoring(ctrl *gomock.Controller) *Storing {
	mock := &Storing{ctrl: ctrl}
	mock.recorder = &StoringMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Storing) EXPECT() *StoringMockRecorder {
	return m.recorder
}

// CreateFile mocks base method
func (m *Storing) CreateFile(arg0 string, arg1 io.Reader) error {
	ret := m.ctrl.Call(m, "CreateFile", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateFile indicates an expected call of CreateFile
func (mr *StoringMockRecorder) CreateFile(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFile", reflect.TypeOf((*Storing)(nil).CreateFile), arg0, arg1)
}

// DeleteFile mocks base method
func (m *Storing) DeleteFile(arg0 string) error {
	ret := m.ctrl.Call(m, "DeleteFile", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteFile indicates an expected call of DeleteFile
func (mr *StoringMockRecorder) DeleteFile(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFile", reflect.TypeOf((*Storing)(nil).DeleteFile), arg0)
}

// GetFile mocks base method
func (m *Storing) GetFile(arg0 string) (io.Reader, error) {
	ret := m.ctrl.Call(m, "GetFile", arg0)
	ret0, _ := ret[0].(io.Reader)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFile indicates an expected call of GetFile
func (mr *StoringMockRecorder) GetFile(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFile", reflect.TypeOf((*Storing)(nil).GetFile), arg0)
}

// HasFile mocks base method
func (m *Storing) HasFile(arg0 string) (bool, error) {
	ret := m.ctrl.Call(m, "HasFile", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HasFile indicates an expected call of HasFile
func (mr *StoringMockRecorder) HasFile(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HasFile", reflect.TypeOf((*Storing)(nil).HasFile), arg0)
}
